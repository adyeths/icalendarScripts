#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""Generate ical for church year."""
import sys
import argparse
import datetime
from math import floor

# ---------------------------------------------------------------------------#

HEADER = """BEGIN:VCALENDAR
VERSION:2.0
CALSCALE:GREGORIAN
PRODID:-//Adyeths//python ical generator//EN
CREATED;VALUE=DATE:{}
"""

FOOTER = "END:VCALENDAR"

VEVENT = """BEGIN:VEVENT
UID:{}
DTSTART;VALUE=DATE:{}
DTEND;VALUE=DATE:{}
SUMMARY:{}
DTSTAMP:{}
TRANSP:TRANSPARENT
STATUS:CONFIRMED
END:VEVENT"""

# ---------------------------------------------------------------------------#


def whichyear(year):
    """Determine which church year starts on advent of the specified year."""
    return {0: "ðŸ„°", 1: "ðŸ„±", 2: "ðŸ„²"}.get((year - 1992) % 3)
    # ðŸ„° ðŸ…°  ðŸ„± ðŸ…±  ðŸ„² ðŸ…²


def calceaster(year):
    """Get date as ordinal for easter using Meeus algorithm."""
    vrh = (
        (19 * (year % 19))
        + floor(year / 100)
        - int(floor(year / 100) / 4)
        - (int((floor(year / 100) - int((floor(year / 100) + 8) / 25) + 1) / 3))
        + 15
    ) % 30
    vrv = (
        32
        + (2 * int(floor(year / 100) % 4))
        + (2 * int((year % 100) / 4))
        - vrh
        - ((year % 100) % 4)
    ) % 7
    vrm = int(((year % 19) + (11 * vrh) + (22 * vrv)) / 451)

    month = int((vrh + vrv + (7 * vrm) + 114) / 31)
    day = ((vrh + vrv - (7 * vrm) + 114) % 31) + 1
    return datetime.date(year, month, day).toordinal()


def getsunday(month, day, year):
    """Get first sunday on or after date."""
    dte = datetime.date(year, month, day)
    dow = 7 - dte.isoweekday()
    return {True: dte.toordinal(), False: dte.toordinal() + dow}.get(dow == 0)


def getsundays(year):
    """Get list of sundays in year."""
    fsv = getsunday(1, 1, year)
    eoy = datetime.date(year, 12, 31).toordinal()
    return [_ for _ in range(fsv, eoy + 1, 7)]


def idxvalue(i, dte):
    """Index helper function."""
    tmp = {
        1: "st",
        2: "nd",
        3: "rd",
        21: "st",
        22: "nd",
        23: "rd",
        31: "st",
        32: "nd",
        33: "rd",
    }.get(i, "th")
    idx = dte + (7 * (i - 1))
    return (tmp, idx)


def getdates(year):
    """Get date values for sundays in calendar year."""
    # TODO: Incorporate descriptions containing readings for the sunday.

    # Add marker to indicate which church year we are in.
    thisyear = whichyear(year - 1)
    nextyear = whichyear(year)

    # some initial calculations
    dtx = {
        "epiphany": datetime.date(year, 1, 6).toordinal(),
        "afterepiphany": getsunday(1, 7, year),
        "easter": calceaster(year),
        "lent": calceaster(year) - 42,
        "pentecost": calceaster(year) + 49,
        "christking": getsunday(11, 20, year),
        "advent": getsunday(11, 27, year),
        "afterchristmas": getsunday(12, 26, year),
        "afterchristmas1": getsunday(12, 26, year - 1),
        "afterchristmas2": getsunday(1, 6, year) - getsunday(1, 2, year),
    }
    dates = {}
    for i in getsundays(year):
        dates[i] = None

    ###########################################################################

    # afterchristmas... previous church year
    if dtx["afterchristmas1"] in dates:
        dates[dtx["afterchristmas1"]] = "1st Sunday after Christmas ðŸ…¦ {}".format(
            thisyear
        )
    if dtx["afterchristmas2"] != 0:
        dates[dtx["afterepiphany"] - 7] = "2nd Sunday after Christmas ðŸ…¦ {}".format(
            thisyear
        )

    # calculatable dates (Order is important here!)
    for i in [
        (dtx["afterepiphany"], 2, 10),
        (dtx["lent"], 1, 6),
        (dtx["easter"], 2, 8),
        (dtx["pentecost"] + 7, 2, 28),
        (dtx["advent"], 1, 5),
    ]:
        for j in range(i[1], i[2]):
            tmp, idx = idxvalue(j, i[0])
            text = {
                dtx[
                    "afterepiphany"
                ]: "Sunday after the Epiphany (Lectionary {}) ðŸ…– {}".format(j, thisyear),
                dtx["lent"]: "Sunday in Lent ðŸ…Ÿ {}".format(thisyear),
                dtx["easter"]: "Sunday of Easter ðŸ…¦ {}".format(thisyear),
                dtx["pentecost"] + 7: "Sunday after Pentecost ðŸ…– {}".format(thisyear),
                dtx["advent"]: "Sunday of Advent ðŸ…‘ {}".format(nextyear),
            }.get(i[0])
            dates[idx] = "{}{} {}".format(j, tmp, text)

    # specific dates (Order is important here!)
    dates[dtx["epiphany"]] = "Epiphany ðŸ…¦ {}".format(thisyear)
    dates[dtx["afterepiphany"]] = "Baptism of our Lord (Lectionary 1) ðŸ…¦ {}".format(
        thisyear
    )
    dates[dtx["lent"] - 4] = "Ash Wednesday ðŸ…Ÿ {}".format(thisyear)
    dates[dtx["easter"] - 7] = "Palm Sunday ðŸ…¢ðŸ…Ÿ {}".format(thisyear)
    dates[dtx["easter"] - 3] = "Maundy Thursday ðŸ…¢ðŸ…¦ {}".format(thisyear)
    dates[dtx["easter"] - 2] = "Good Friday {}".format(thisyear)
    dates[dtx["easter"] - 1] = "Easter Vigil {}".format(thisyear)
    dates[dtx["easter"]] = "Resurrection of Our Lord ðŸ…¦G {}".format(thisyear)
    dates[dtx["easter"] + 39] = "Ascension of the Lord ðŸ…¦ {}".format(thisyear)
    dates[dtx["pentecost"]] = "Day of Pentecost ðŸ…¡ {}".format(thisyear)
    dates[dtx["pentecost"] + 7] = "The Holy Trinity ðŸ…¦ {}".format(thisyear)
    dates[dtx["christking"]] = "Christ the King (Lectionary 34) ðŸ…¦ {}".format(thisyear)
    dates[datetime.date(year, 12, 25).toordinal()] = "Nativity of Our Lord ðŸ…¦"
    if dtx["afterchristmas"] in dates:
        dates[dtx["afterchristmas"]] = "1st Sunday after Christmas ðŸ…¦ {}".format(
            nextyear
        )

    # Add lectionary number to Sundays after Pentecost
    # this must follow the specific dates listed above!
    lect = 33
    for i in sorted(dates.keys(), reverse=True):
        if dates[i] is not None:
            if dates[i].endswith("Sunday after Pentecost ðŸ…– {}".format(thisyear)):
                dates[i] = dates[i].replace(" ðŸ…– {}".format(thisyear), "")
                dates[i] = "{} (Lectionary {}) ðŸ…– {}".format(dates[i], lect, thisyear)
                lect -= 1

    # return our results
    return dates


def getfdates(year):
    """Get fixed dates in calendar year for lesser festivals."""
    return (
        (datetime.date(year, 1, 1).toordinal(), "NAME OF JESUS ðŸ…¦"),
        (datetime.date(year, 1, 18).toordinal(), "CONFESSION OF PETER ðŸ…¦"),
        (datetime.date(year, 1, 25).toordinal(), "CONVERSION OF PAUL ðŸ…¦"),
        (datetime.date(year, 2, 2).toordinal(), "PRESENTATION OF OUR LORD ðŸ…¦"),
        (datetime.date(year, 3, 19).toordinal(), "JOSEPH, GUARDIAN OF JESUS ðŸ…¦"),
        (datetime.date(year, 3, 25).toordinal(), "ANNUNCIATION OF OUR LORD ðŸ…¦"),
        (datetime.date(year, 4, 25).toordinal(), "MARK, EVANGELIST ðŸ…¢ðŸ…¡"),
        (datetime.date(year, 5, 1).toordinal(), "PHILIP AND JAMES, APOSTLES ðŸ…¢ðŸ…¡"),
        (datetime.date(year, 5, 14).toordinal(), "MATTHIAS, APOSTLE ðŸ…¢ðŸ…¡"),
        (datetime.date(year, 5, 31).toordinal(), "VISITATION OF MARY TO ELIZABETH ðŸ…¦"),
        (datetime.date(year, 6, 11).toordinal(), "BARNABAS, APOSTLE ðŸ…¢ðŸ…¡"),
        (datetime.date(year, 6, 24).toordinal(), "JOHN THE BAPTIST ðŸ…¦"),
        (datetime.date(year, 6, 29).toordinal(), "PETER AND PAUL, APOSTLES ðŸ…¢ðŸ…¡"),
        (datetime.date(year, 7, 3).toordinal(), "THOMAS, APOSTLE ðŸ…¢ðŸ…¡"),
        (datetime.date(year, 7, 22).toordinal(), "MARY MAGDALENE, APOSTLE ðŸ…¦"),
        (datetime.date(year, 7, 25).toordinal(), "JAMES, APOSTLE ðŸ…¢ðŸ…¡"),
        (datetime.date(year, 8, 15).toordinal(), "MARY, MOTHER OF OUR LORD ðŸ…¦"),
        (datetime.date(year, 8, 24).toordinal(), "BARTHOLOMEW, APOSTLE ðŸ…¢ðŸ…¡"),
        (datetime.date(year, 9, 14).toordinal(), "HOLY CROSS DAY ðŸ…¢ðŸ…¡"),
        (datetime.date(year, 9, 21).toordinal(), "MATTHEW, APOSTLE AND EVANGELIST ðŸ…¢ðŸ…¡"),
        (datetime.date(year, 9, 29).toordinal(), "MICHAEL AND ALL ANGELS ðŸ…¦"),
        (datetime.date(year, 10, 18).toordinal(), "LUKE, EVANGELIST ðŸ…¢ðŸ…¡"),
        (datetime.date(year, 10, 28).toordinal(), "SIMON AND JUDE, APOSTLES ðŸ…¢ðŸ…¡"),
        (datetime.date(year, 10, 31).toordinal(), "REFORMATION DAY ðŸ…¡"),
        (datetime.date(year, 11, 1).toordinal(), "ALL SAINTS DAY ðŸ…¦"),
        (datetime.date(year, 11, 30).toordinal(), "ANDREW, APOSTLE ðŸ…¢ðŸ…¡"),
        (datetime.date(year, 12, 26).toordinal(), "STEPHEN, DEACON AND MARTYR ðŸ…¢ðŸ…¡"),
        (datetime.date(year, 12, 27).toordinal(), "JOHN, APOSTLE AND EVANGELIST ðŸ…¦"),
        (datetime.date(year, 12, 28).toordinal(), "THE HOLY INNOCENTS, MARTYRS ðŸ…¢ðŸ…¡"),
    )


def getfdates2(year):
    """Get fixed dates in calendar year for commemorations."""
    return (
        (
            datetime.date(year, 1, 2).toordinal(),
            "Johann Konrad Wilhelm Loehe, renewer of the church, 1872 ðŸ…¦",
        ),
        (
            datetime.date(year, 1, 15).toordinal(),
            "Martin Luther King Jr., renewer of society, martyr, 1968 ðŸ…¢ðŸ…¡",
        ),
        (
            datetime.date(year, 1, 17).toordinal(),
            "Antony of Egypt, renewer of the church, c.356 ðŸ…¦",
        ),
        (
            datetime.date(year, 1, 17).toordinal(),
            "Pachomius, renewer of the church, 346 ðŸ…¦",
        ),
        (
            datetime.date(year, 1, 18).toordinal(),
            "Week of Prayer for Christian Unity begins",
        ),
        (
            datetime.date(year, 1, 19).toordinal(),
            "Henry, Bishop of Uppsala, martyr, 1156 ðŸ…¢ðŸ…¡",
        ),
        (datetime.date(year, 1, 21).toordinal(), "Agnes, martyr, c.304 ðŸ…¢ðŸ…¡"),
        (
            datetime.date(year, 1, 25).toordinal(),
            "Week of Prayer for Christian Unity ends",
        ),
        (
            datetime.date(year, 1, 26).toordinal(),
            "Timothy, Titus, and Silas, missionaries ðŸ…¦",
        ),
        (
            datetime.date(year, 1, 27).toordinal(),
            "Lydia, Dorcas, and Phoebe, witnesses to the faith ðŸ…¦",
        ),
        (datetime.date(year, 1, 28).toordinal(), "Thomas Aquinas, teacher, 1274 ðŸ…¦"),
        (
            datetime.date(year, 2, 3).toordinal(),
            "Ansgar, Bishop of Hamburg, missionary to Denmark and Sweden, 865 ðŸ…¦",
        ),
        (datetime.date(year, 2, 5).toordinal(), "The Martyrs of Japan, 1597 ðŸ…¢ðŸ…¡"),
        (
            datetime.date(year, 2, 14).toordinal(),
            "Cyril, monk, 869; Methodius, bishop, 885; missionaries to the Slavs ðŸ…¦",
        ),
        (
            datetime.date(year, 2, 18).toordinal(),
            "Martin Luther, renewer of the church, 1546 ðŸ…¦",
        ),
        (
            datetime.date(year, 2, 23).toordinal(),
            "Polycarp, Bishop of Smyrna, martyr, 156 ðŸ…¢ðŸ…¡",
        ),
        (datetime.date(year, 2, 25).toordinal(), "Elizabeth Fedde, deaconess, 1921 ðŸ…¦"),
        (datetime.date(year, 3, 1).toordinal(), "George Herbert, hymnwriter, 1633 ðŸ…¦"),
        (
            datetime.date(year, 3, 2).toordinal(),
            "John Wesley, 1791; Charles Wesley, 1788; renewers of the church ðŸ…¦",
        ),
        (
            datetime.date(year, 3, 7).toordinal(),
            "Perpetua and Felicity and companions, martyrs at Carthage, 202 ðŸ…¢ðŸ…¡",
        ),
        (
            datetime.date(year, 3, 10).toordinal(),
            "Harriet Tubman, 1913; Sojourner Truth, 1883; renewers of society ðŸ…¦",
        ),
        (
            datetime.date(year, 3, 12).toordinal(),
            "Gregory the Great, Bishop of Rome, 604 ðŸ…¦",
        ),
        (
            datetime.date(year, 3, 17).toordinal(),
            "Patrick, bishop, missionary to Ireland, 461 ðŸ…¦",
        ),
        (
            datetime.date(year, 3, 21).toordinal(),
            "Thomas Cranmer, Bishop of Canterbury, martyr, 1556 ðŸ…¢ðŸ…¡",
        ),
        (
            datetime.date(year, 3, 22).toordinal(),
            "Jonathan Edwards, teacher, missionary to American Indians, 1758 ðŸ…¦",
        ),
        (
            datetime.date(year, 3, 24).toordinal(),
            "Oscar Arnulfo Romero, Bishop of El Salvador, martyr, 1980 ðŸ…¢ðŸ…¡",
        ),
        (
            datetime.date(year, 3, 29).toordinal(),
            "Hans Nielsen Hauge, renewer of the church, 1824 ðŸ…¦",
        ),
        (datetime.date(year, 3, 31).toordinal(), "John Donne, poet, 1631 ðŸ…¦"),
        (
            datetime.date(year, 4, 4).toordinal(),
            "Benedict the African, confessor, 1589 ðŸ…¦",
        ),
        (
            datetime.date(year, 4, 6).toordinal(),
            "Albrecht DÃ¼rer, 1528; Matthias GrÃ¼newald, 1529; Lucas Cranach, 1553; artists ðŸ…¦",
        ),
        (
            datetime.date(year, 4, 9).toordinal(),
            "Dietrich Bonhoeffer, theologian, 1945 ðŸ…¦",
        ),
        (
            datetime.date(year, 4, 10).toordinal(),
            "Mikael Agricola, Bishop of Turku, 1557 ðŸ…¦",
        ),
        (
            datetime.date(year, 4, 19).toordinal(),
            "Olavus Petri, priest, 1552; Laurentius Petri, Bishop of Uppsala, 1572; renewers of the church ðŸ…¦",
        ),
        (
            datetime.date(year, 4, 21).toordinal(),
            "Anselm, Bishop of Canterbury, 1109 ðŸ…¦",
        ),
        (
            datetime.date(year, 4, 23).toordinal(),
            "Toyohiko Kagawa, renewer of society, 1960 ðŸ…¦",
        ),
        (
            datetime.date(year, 4, 29).toordinal(),
            "Catherine of Siena, theologian, 1380 ðŸ…¦",
        ),
        (
            datetime.date(year, 5, 2).toordinal(),
            "Athanasius, Bishop of Alexandria, 373 ðŸ…¦",
        ),
        (datetime.date(year, 5, 4).toordinal(), "Monica, mother of Augustine, 387 ðŸ…¦"),
        (
            datetime.date(year, 5, 8).toordinal(),
            "Julian of Norwich, renewer of the church c.1416 ðŸ…¦",
        ),
        (
            datetime.date(year, 5, 9).toordinal(),
            "Nicolaus Ludwig von Zinzendorf, renewer of the church, hymnwriter, 1760 ðŸ…¦",
        ),
        (
            datetime.date(year, 5, 18).toordinal(),
            "Erik, King of Sweden, martyr, 1160 ðŸ…¢ðŸ…¡",
        ),
        (
            datetime.date(year, 5, 21).toordinal(),
            "Helena, mother of Constantine, c.330 ðŸ…¦",
        ),
        (
            datetime.date(year, 5, 24).toordinal(),
            "Nicolaus Copernicus, 1543; Leonhard Euler, 1783; scientists ðŸ…¦",
        ),
        (
            datetime.date(year, 5, 27).toordinal(),
            "John Calvin, renewer of the church, 1564 ðŸ…¦",
        ),
        (datetime.date(year, 5, 29).toordinal(), "JiÅ™Ã­ TÅ™anovskÃ½, hymnwriter, 1637 ðŸ…¦"),
        (datetime.date(year, 6, 1).toordinal(), "Justin, martyr at Rome, c.165 ðŸ…¢ðŸ…¡"),
        (datetime.date(year, 6, 3).toordinal(), "The Martyrs of Uganda, 1886 ðŸ…¢ðŸ…¡"),
        (datetime.date(year, 6, 3).toordinal(), "John XXIII, Bishop of Rome, 1963 ðŸ…¦"),
        (
            datetime.date(year, 6, 5).toordinal(),
            "Boniface, Bishop of Mainz, missionary to Germany, martyr, 754 ðŸ…¢ðŸ…¡",
        ),
        (
            datetime.date(year, 6, 7).toordinal(),
            "Seattle, chief of the Duwamish Confederacy, 1866 ðŸ…¦",
        ),
        (
            datetime.date(year, 6, 9).toordinal(),
            "Columba, 597; Aidan, 651, Bede, 735; renewers of the church ðŸ…¦",
        ),
        (
            datetime.date(year, 6, 14).toordinal(),
            "Basil the Great, Bishop of Caesarea, 379 ðŸ…¦",
        ),
        (datetime.date(year, 6, 14).toordinal(), "Gregory, Bishop of Nyssa, c.385 ðŸ…¦"),
        (
            datetime.date(year, 6, 14).toordinal(),
            "Gregory of Nazianzus, Bishop of Constantinople, c.389 ðŸ…¦",
        ),
        (datetime.date(year, 6, 14).toordinal(), "Macrina, teacher, c.379 ðŸ…¦"),
        (
            datetime.date(year, 6, 21).toordinal(),
            "Onesimos Nesib, translator, evangelist, 1931 ðŸ…¦",
        ),
        (
            datetime.date(year, 6, 25).toordinal(),
            "Presentation of the Augsburg Confession, 1530 ðŸ…¦",
        ),
        (
            datetime.date(year, 6, 25).toordinal(),
            "Philipp Melanchthon, renewer of the church, 1560 ðŸ…¦",
        ),
        (datetime.date(year, 6, 27).toordinal(), "Cyril, Bishop of Alexandria, 444 ðŸ…¦"),
        (datetime.date(year, 6, 28).toordinal(), "Irenaeus, Bishop of Lyons, c.202 ðŸ…¦"),
        (
            datetime.date(year, 7, 1).toordinal(),
            "Catherine winkworth, 1878; John Mason Neale, 1866; hymn translators ðŸ…¦",
        ),
        (datetime.date(year, 7, 6).toordinal(), "Jan Hus, martyr, 1415 ðŸ…¢ðŸ…¡ "),
        (
            datetime.date(year, 7, 11).toordinal(),
            "Benedict of Nursia, Abbot of Monte Cassino, c.540 ðŸ…¦",
        ),
        (
            datetime.date(year, 7, 12).toordinal(),
            "Nathan SÃ¶derblom, Bishop of Uppsala, 1931 ðŸ…¦",
        ),
        (
            datetime.date(year, 7, 17).toordinal(),
            "BartolemÃ© de Las Casas, missionary to the Indies, 1566 ðŸ…¦",
        ),
        (
            datetime.date(year, 7, 23).toordinal(),
            "Birgitta of Sweden, renewer of the church, 1373 ðŸ…¦",
        ),
        (
            datetime.date(year, 7, 28).toordinal(),
            "Johann Sebastian Bach, 1750; Heinrich SchÃ¼tz, 1672; George Frederick Handel, 1759; musicians ðŸ…¦",
        ),
        (
            datetime.date(year, 7, 29).toordinal(),
            "Mary, Martha, and Lazarus of Bethany ðŸ…¦",
        ),
        (
            datetime.date(year, 7, 29).toordinal(),
            "Olaf, King of Norway, martyr, 1030 ðŸ…¢ðŸ…¡",
        ),
        (
            datetime.date(year, 8, 8).toordinal(),
            "Dominic, founder of the Order of Preachers (Dominicans), 1221 ðŸ…¦",
        ),
        (datetime.date(year, 8, 10).toordinal(), "Lawrence, deacon, martyr, 258 ðŸ…¢ðŸ…¡"),
        (
            datetime.date(year, 8, 11).toordinal(),
            "Clare, Abbess of San Damiano, 1253 ðŸ…¦",
        ),
        (
            datetime.date(year, 8, 13).toordinal(),
            "Florence Nightingale, 1910; Clara Maass, 1901; renewers of society ðŸ…¦",
        ),
        (
            datetime.date(year, 8, 14).toordinal(),
            "Maximilian Kolbe, 1941; Kaj Munk, 1944; martyrs ðŸ…¢ðŸ…¡",
        ),
        (datetime.date(year, 8, 20).toordinal(), "Bernard, Abbot of Clairvaux, 1153 ðŸ…¦"),
        (datetime.date(year, 8, 28).toordinal(), "Augustine, Bishop of Hippo, 430 ðŸ…¦"),
        (
            datetime.date(year, 8, 28).toordinal(),
            "Moses the Black, monk, martyr, c.400 ðŸ…¢ðŸ…¡",
        ),
        (
            datetime.date(year, 9, 2).toordinal(),
            "Nikolai Frederik Severin Grundtvig, bishop, renewer of the church, 1872 ðŸ…¦",
        ),
        (
            datetime.date(year, 9, 9).toordinal(),
            "Peter Claver, priest, missionary to Colombia 1654 ðŸ…¦",
        ),
        (
            datetime.date(year, 9, 13).toordinal(),
            "John Chrysostom, Bishop of Constantinople, 407 ðŸ…¦",
        ),
        (
            datetime.date(year, 9, 16).toordinal(),
            "Cyprian, Bishop of Carthage, martyr, c.258 ðŸ…¢ðŸ…¡",
        ),
        (datetime.date(year, 9, 17).toordinal(), "Hildegard, Abbess of Bingen, 1179 ðŸ…¦"),
        (
            datetime.date(year, 9, 18).toordinal(),
            "Dag HammarskjÃ¶ld, renewer of society, 1961 ðŸ…¦",
        ),
        (datetime.date(year, 9, 30).toordinal(), "Jerome, translator, teacher, 420 ðŸ…¦"),
        (
            datetime.date(year, 10, 4).toordinal(),
            "Francis of Assisi, renewer of the church, 1226 ðŸ…¦",
        ),
        (
            datetime.date(year, 10, 4).toordinal(),
            "Theodor Fliedner, renewer of society, 1864 ðŸ…¦",
        ),
        (
            datetime.date(year, 10, 6).toordinal(),
            "William Tyndale, translator, martyr, 1536 ðŸ…¢ðŸ…¡",
        ),
        (
            datetime.date(year, 10, 7).toordinal(),
            "Henry Melchior Muhlenberg, pastor in North America, 1787 ðŸ…¦",
        ),
        (
            datetime.date(year, 10, 15).toordinal(),
            "Teresa of Avila, teacher, renewer of the church, 1582 ðŸ…¦",
        ),
        (
            datetime.date(year, 10, 17).toordinal(),
            "Ignatius, Bishop of Antioch, martyr, c.115 ðŸ…¢ðŸ…¡",
        ),
        (
            datetime.date(year, 10, 23).toordinal(),
            "James of Jerusalem, martyr, c.62 ðŸ…¢ðŸ…¡",
        ),
        (
            datetime.date(year, 10, 26).toordinal(),
            "Philipp Nicolai, 1608; Johann Heermann, 1647; Paul Gerhardt, 1676; hymnwriters ðŸ…¦",
        ),
        (
            datetime.date(year, 11, 3).toordinal(),
            "MartÃ­n de Porres, renewer of society, 1639 ðŸ…¦",
        ),
        (
            datetime.date(year, 11, 7).toordinal(),
            "John Christian Frederick Heyer, 1873; Bartholomaeus Ziegenbalg, 1719; Ludwig Nommensen, 1918; missionaries ðŸ…¦",
        ),
        (datetime.date(year, 11, 11).toordinal(), "Martin, Bishop of Tours, 397 ðŸ…¦"),
        (
            datetime.date(year, 11, 11).toordinal(),
            "SÃ¸ren Aabye Kierkegaard, teacher, 1855 ðŸ…¦",
        ),
        (
            datetime.date(year, 11, 17).toordinal(),
            "Elizabeth of Hungary, renewer of society, 1231 ðŸ…¦",
        ),
        (datetime.date(year, 11, 23).toordinal(), "Clement, Bishop of Rome, c.100 ðŸ…¦"),
        (
            datetime.date(year, 11, 23).toordinal(),
            "Miguel AgustÃ­n Pro, martyr, 1927 ðŸ…¢ðŸ…¡",
        ),
        (
            datetime.date(year, 11, 24).toordinal(),
            "Justus Falckner, 1723; Jehu Jones, 1852; William Passavant, 1894; Pastors in North America ðŸ…¦",
        ),
        (datetime.date(year, 11, 25).toordinal(), "Isaac Watts, hymnwriter, 1748 ðŸ…¦"),
        (
            datetime.date(year, 12, 3).toordinal(),
            "Francis Xavier, missionary to Asia, 1552 ðŸ…¦",
        ),
        (
            datetime.date(year, 12, 4).toordinal(),
            "John of Damascus, theologian and hymnwriter, c.749 ðŸ…¦",
        ),
        (datetime.date(year, 12, 6).toordinal(), "Nicholas, Bishop of Myra, c.342 ðŸ…¦"),
        (datetime.date(year, 12, 7).toordinal(), "Ambrose, Bishop of Milan, 397 ðŸ…¦"),
        (datetime.date(year, 12, 13).toordinal(), "Lucy, martyr, 304 ðŸ…¢ðŸ…¡"),
        (
            datetime.date(year, 12, 14).toordinal(),
            "John of the Cross, renewer of the church, 1591 ðŸ…¦",
        ),
        (
            datetime.date(year, 12, 20).toordinal(),
            "Katharina von Bora Luther, renewer of the church, 1552 ðŸ…¦",
        ),
    )


def main():
    """Main routine to generate a yearly calendar for the church year."""
    parser = argparse.ArgumentParser(
        description="""
            Generate church year calendar for calendar year.
        """
    )
    parser.add_argument(
        "-y", type=int, metavar="Year", default=datetime.date.today().year
    )
    args = parser.parse_args()

    if args.y <= 1992:
        print("Year must be greater than or equal to 1992!")
        sys.exit()

    print("Generating church calendar for {}".format(args.y), file=sys.stderr)

    ###########################################################################

    # ## sundays in the year...
    dates = getdates(args.y)

    # ## fixed dates for lesser festivals.
    fdates = getfdates(args.y)

    # ## fixed dates for commemorations.
    fdates2 = getfdates2(args.y)

    # Output ical file for dates and fdates.
    with open("elca-{}.ics".format(args.y), "w") as ofile:
        created = datetime.datetime.now().strftime("%Y%m%dT%H%M%SZ")

        # ical header
        ofile.write(HEADER.format(created).replace("\n", "\r\n"))

        # output sundays
        uidnum = 0
        for i in sorted(dates.keys()):
            uidnum += 1
            uid = "elcasundays{}{:03d}@adyeths".format(args.y, uidnum)
            dtstart = datetime.date.fromordinal(i).strftime("%Y%m%d")
            dtend = datetime.date.fromordinal(i + 1).strftime("%Y%m%d")
            event = VEVENT.format(uid, dtstart, dtend, dates[i], created)
            print(event.replace("\n", "\r\n"), file=ofile, end="\r\n")

        # output lesser festivals
        uidnum = 0
        for i in fdates:
            uidnum += 1
            uid = "elcalesser{}{:03d}@adyeths".format(args.y, uidnum)
            dtstart = datetime.date.fromordinal(i[0]).strftime("%Y%m%d")
            dtend = datetime.date.fromordinal(i[0] + 1).strftime("%Y%m%d")
            event = VEVENT.format(uid, dtstart, dtend, i[1], created)
            print(event.replace("\n", "\r\n"), file=ofile, end="\r\n")

        # output commemorations
        uidnum = 0
        for i in fdates2:
            uidnum += 1
            uid = "elcacommemorations{}{:03d}@adyeths".format(args.y, uidnum)
            dtstart = datetime.date.fromordinal(i[0]).strftime("%Y%m%d")
            dtend = datetime.date.fromordinal(i[0] + 1).strftime("%Y%m%d")
            event = VEVENT.format(uid, dtstart, dtend, i[1], created)
            print(event.replace("\n", "\r\n"), file=ofile, end="\r\n")

        # ical footer
        ofile.write(FOOTER.replace("\n", "\r\n"))


# ---------------------------------------------------------------------------#


if __name__ == "__main__":
    main()
